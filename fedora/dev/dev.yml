#!/usr/bin/env ansible-playbook
---
# docker connection requires ansible >= 2.0
# Depends on /opt/src being present and populated.

- name: start up container to build marun/dev image
  hosts: localhost
  vars:
    base_image: marun/dev-base
    docker_hostname: dev-build

  tasks:
    - name: build marun/dev-base image
      command: docker build -t {{ base_image }} .
    - name: start up a docker container by running bash
      local_action: docker image={{ base_image }} name={{ docker_hostname }} detach=yes tty=yes command=bash volumes=/opt/src:/opt/src
    - name: add the host
      add_host: name={{ docker_hostname }}

- name: configure the marun/dev image
  hosts: dev-build
  connection: docker
  vars:
    image: marun/dev
    username: dev
    home_path: "/home/{{ username }}"
    src_path: "{{ home_path }}/src"
    bash_custom: "{{ src_path }}/homedir/.bash_custom"
    # Need to target .bashrc instead of .bash_profile because
    # docker doesn't run .bash_profile
    bash_custom_target: "{{ home_path }}/.bashrc"
    bash_custom_cfg: >
      if [ -f {{ bash_custom }} ]; then . {{ bash_custom }}; fi
    host_docker_gid: 1001

  tasks:
    - name: add authorized_keys for user
      copy: >
        src=/opt/data/ssh/id_rsa.pub
        dest={{ home_path }}/.ssh/authorized_keys
        mode=0600
        owner={{ username }}
        group={{ username }}

    - name: symlink source code to home
      file: >
        src=/opt/src
        dest={{ src_path }}
        state=link
      become: yes
      become_user: "{{ username }}"

    - name: symlink dot-emacs to home
      file: >
        src={{ src_path }}/dot-emacs
        dest={{ home_path }}/.emacs.d
        state=link
      become: yes
      become_user: "{{ username }}"

    - name: install emacs dependencies
      command: "{{ home_path }}/.emacs.d/install.sh"
      become: yes
      become_user: "{{ username }}"
      args:
        creates: "{{ home_path }}/.cask"

    - name: remove default emacs configuration
      file: >
        path={{ home_path }}/.emacs
        state=absent

    - name: symlink dotfiles to home
      file: >
        src={{ src_path }}/homedir/{{ item }}
        dest=~/{{ item }}
        state=link
      become: yes
      become_user: "{{ username }}"
      with_items:
        - bin
        - .gitconfig
        - .gitignore
        - .vimrc
        - .screenrc

    - name: add bash customizations
      lineinfile: dest="{{ bash_custom_target }}" line="{{ bash_custom_cfg }}"
      become: yes
      become_user: "{{ username }}"

    # Ensure that the user belongs to the group owning the docker
    # socket on the host.
    - name: add docker-socket group
      group: name=docker-socket state=present gid="{{ host_docker_gid }}"

    - name: add user to docker-socket group
      user: name={{ username }} groups=docker-socket append=yes

  post_tasks:
    - name: capture the container to a base image
      local_action: command docker commit {{ inventory_hostname }} {{ image }}
    - name: stop the current running container
      local_action: command docker kill {{ inventory_hostname }}
